<span class="span-44 margin-top-2 margin-bottom-1 margin-left-1 clearfix">
	<span class="span-44 bold_font font26 dark_gray">
		<%= word_for :register%>
	</span>
	<span class="span-44 bold_font font16 medium_dark_gray margin-top-2 clearfix">
		<span class="span-10">
			<%= word_for :your_mail%>
		</span>
		<span class="span-34">
			<input type="text" class="dark_gray span-32 input_type" id="member_email_reg" />
		</span>
	</span>
	<span class="span-44 bold_font font16 medium_dark_gray margin-top-1 clearfix">
		<span class="span-10">
			<%= word_for :your_name%>
		</span>
		<span class="span-34">
			<input type="text" class="dark_gray span-32 input_type" id="member_name" />
		</span>
	</span>
	<span class="span-44 bold_font font12 medium_dark_gray margin-top-1 clearfix">
		<span class="span-10">
			&nbsp;
		</span>
		<span class="span-34 agree_accept margin-1">
			<%= word_for :please_agree%> <a href="#"><%= word_for :terms%></a> and <a href="#"><%= word_for :policy%></a>
		</span>
	</span>
	<span class="span-44 bold_font font16 medium_gray margin-top-1 clearfix">
		<span class="span-10">
			&nbsp;
		</span>
		<span class="span-34 margin-bottom-1">
			<a href="#" class="green_button" id="register_submit_button" onclick="submit_register();return false;">
				<%= word_for :agree_sign_up%>
			</a>
				
		</span>
		<div style="height:0px;clear:left;">&nbsp;</div>
	</span>
	
</span>

<script language="javascript">
	register_form_validator = {
	    validate: function (input_obj) {
			if (input_obj.id in this.validatees)
				(this.validatees[input_obj.id])(input_obj);
			else 
				alert("register_form_validator does not validate '" + input_obj.id+"'");
	    },
		validate_form: function() {
			var bool = true;
			
			for (var i in this.validatees)
			{
				bool = (this.validatees[i])(jQuery("#"+i)[0]) && bool;
			}
	
			return bool;
		},
		validatees : {
			"member_email_reg" : function (input_obj) {
				return validate_input_obj(input_obj,get_email_errors);
			},
			"member_name" : function (input_obj) {
				return validate_input_obj(input_obj,get_string_errors);
			}
		
		}
	}

	function submit_register()
	{
		if (!register_form_validator.validate_form()) {
			return;
		}
		
		$('#register_submit_button').ruby_box(false);
		
		try {
			$('#register_submit_button').loading_button(true);
			
			$.ajax({
				type: "POST",
				url: '/member/register',
				cache: false,
				data: {
					authenticity_token: "<%=form_authenticity_token%>",
					"email": $('#member_email_reg').val(),
					"name": $('#member_name').val()
					
				},
				success: function(data){
					try {
						if (data.ok == true) {
							top.location.href = "/member/thank_register";
							
						}
						else {
							$('#register_submit_button').loading_button(false);
							
							for (var i in data.error_message) {
								try {
									$('#register_submit_button').ruby_box(true,data.error_message[i]);
								} 
								catch (e) {
								
								}
							}	
							
						}
						
					} 
					catch (e) {
						$('#register_submit_button').loading_button(false);
						$.error_log('submit_register', e);
						alert(e);
					}
					
				},
				error: function(req, status, e){
					$('#register_submit_button').loading_button(false);
					alert('Cannot connect to the server. Please try again later.');
				}
			});
		} catch (e)
		{
			$('#register_submit_button').loading_button(false);
			$.error_log('submit_register',e);
			alert(e);
		}
	}		

	$(function () {
		$('#member_email_reg').default_text("please enter your email");
 		$('#member_name').default_text("please enter your name");
	})
	
</script>	
	

