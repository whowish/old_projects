<span class="span-100 clearfix">
    <span class="span-92 clearfix margin-left-4 margin-bottom-2">
       <span class="contentBox">
			<span class="span-92 clearfix">
			    <span class="span-92 confirm_register_bg clearfix">
					<span class="span-44 margin-top-1 margin-left-1 eco_green_bg display_inline_block">
						<span class="span-40 margin-top-1 margin-left-1 white font18 bold_font display_block">
							<%= word_for :password_recovery%>
						</span>
						<span class="span-40 bold_font font16 white margin-top-2 margin-left-1 clearfix">
							<span class="span-15">
								<%= word_for :password%>
							</span>
							<span class="span-25">
								<input name="" type="password" class="dark_gray span-25 input_type" id="member_password"  />
							</span>
						</span>
						<span class="span-40 bold_font font16 white margin-top-1  margin-left-1 clearfix">
							<span class="span-15">
								<%= word_for :confirm_password%>
							</span>
							<span class="span-25">
								<input name="" type="password" class="dark_gray span-25 input_type" id="member_confirm_password" />
							</span>
						</span>
						<span class="span-20 margin-top-1 margin-bottom-1 eco_green_bg display_inline_block" style="margin-left:160px;">
							<a href="#" class="green_button" id="recover_password_form_button" onclick="submit_recover_password();return false;">
								<%= word_for :submit%>
							</a>
						</span>
						<div style="height:0px;clear:left;">&nbsp;</div>
					</span>
			    </span>
			</span>
		 </span>
    </span>
</span>

<script language="javascript">
	recover_password_form_validator = {
	    validate: function (input_obj) {
			if (input_obj.id in this.validatees)
				(this.validatees[input_obj.id])(input_obj);
			else 
				alert("recover_password_form_validator does not validate '" + input_obj.id+"'");
	    },
		validate_form: function() {
			var bool = true;
			
			for (var i in this.validatees)
			{
				bool = (this.validatees[i])(jQuery("#"+i)[0]) && bool;
			}
	
			return bool;
		},
		validatees : {
			"member_password" : function (input_obj) {
				return validate_input_obj(input_obj,function (s) {
					if (s == "")
					{
						return "Please specify password";
					}
					if (s != $('#member_confirm_password').val())
					{
						return "The password and its confirmation do not match.";
					}
					return null;
				});
			},
			"member_confirm_password" : function (input_obj) {
				return validate_input_obj(input_obj,function (s) {
					return null;
				});
			}
		
		}
	}

	function submit_recover_password()
	{
		if (!recover_password_form_validator.validate_form()) {
			return;
		}
		
		try {
			$('#recover_password_form_validator').loading_button(true);
			
			$.ajax({
				type: "POST",
				url: '/member/recover_password',
				cache: false,
				data: {
					authenticity_token: "<%=form_authenticity_token%>",
					"password": $('#member_password').val(),
					"confirm_password": $('#member_confirm_password').val(),
					"email":"<%=params[:email]%>",
					"unique_key":"<%=params[:unique_key]%>"
					
				},
				success: function(data){
					try {
						if (data.ok == true) {
							alert('The new password is set.');
							top.location.href = "/home";
						}
						else {
							$('#recover_password_form_button').loading_button(false);
							$('#member_password').ruby_box(true,data.error_message);
						}
					} 
					catch (e) {
						$('#recover_password_form_button').loading_button(false);
						$.error_log('recover_password', e);
						alert(e);
					}
					
				},
				error: function(req, status, e){
					$('#recover_password_form_button').loading_button(false);
					alert('Cannot connect to the server. Please try again later.');
				}
			});
		} catch (e)
		{
			$('#recover_password_form_button').loading_button(false);
			$.error_log('recover_password',e);
			alert(e);
		}
	}		
</script>	
	




